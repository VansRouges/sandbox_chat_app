{"ast":null,"code":"var _createForOfIteratorHelper = require(\"/Users/apple/Documents/Testnet/sandbox_chat_application/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar merge = require('deepmerge');\n\nvar he = require('he');\n\nvar htmlparser = require('htmlparser2');\n\nvar _require = require('./block-text-builder'),\n    BlockTextBuilder = _require.BlockTextBuilder;\n\nvar defaultFormatters = require('./formatter');\n\nvar _require2 = require('./helper'),\n    limitedDepthRecursive = _require2.limitedDepthRecursive,\n    set = _require2.set,\n    splitSelector = _require2.splitSelector; // eslint-disable-next-line import/no-unassigned-import\n\n\nrequire('./typedefs');\n/**\n * Default options.\n *\n * @constant\n * @type { Options }\n * @default\n * @private\n */\n\n\nvar DEFAULT_OPTIONS = {\n  baseElement: 'body',\n  decodeOptions: {\n    isAttributeValue: false,\n    strict: false\n  },\n  formatters: {},\n  limits: {\n    ellipsis: '...',\n    maxChildNodes: undefined,\n    maxDepth: undefined,\n    maxInputLength: 1 << 24 // 16_777_216\n\n  },\n  longWordSplit: {\n    forceWrapOnLimit: false,\n    wrapCharacters: []\n  },\n  preserveNewlines: false,\n  returnDomByDefault: true,\n  tables: [],\n  tags: {\n    '': {\n      format: 'inline'\n    },\n    // defaults for any other tag name\n    'a': {\n      format: 'anchor',\n      options: {\n        baseUrl: null,\n        hideLinkHrefIfSameAsText: false,\n        ignoreHref: false,\n        noAnchorUrl: true,\n        noLinkBrackets: false\n      }\n    },\n    'article': {\n      format: 'block'\n    },\n    'aside': {\n      format: 'block'\n    },\n    'blockquote': {\n      format: 'blockquote',\n      options: {\n        leadingLineBreaks: 2,\n        trailingLineBreaks: 2,\n        trimEmptyLines: true\n      }\n    },\n    'br': {\n      format: 'lineBreak'\n    },\n    'div': {\n      format: 'block'\n    },\n    'footer': {\n      format: 'block'\n    },\n    'form': {\n      format: 'block'\n    },\n    'h1': {\n      format: 'heading',\n      options: {\n        leadingLineBreaks: 3,\n        trailingLineBreaks: 2,\n        uppercase: true\n      }\n    },\n    'h2': {\n      format: 'heading',\n      options: {\n        leadingLineBreaks: 3,\n        trailingLineBreaks: 2,\n        uppercase: true\n      }\n    },\n    'h3': {\n      format: 'heading',\n      options: {\n        leadingLineBreaks: 3,\n        trailingLineBreaks: 2,\n        uppercase: true\n      }\n    },\n    'h4': {\n      format: 'heading',\n      options: {\n        leadingLineBreaks: 2,\n        trailingLineBreaks: 2,\n        uppercase: true\n      }\n    },\n    'h5': {\n      format: 'heading',\n      options: {\n        leadingLineBreaks: 2,\n        trailingLineBreaks: 2,\n        uppercase: true\n      }\n    },\n    'h6': {\n      format: 'heading',\n      options: {\n        leadingLineBreaks: 2,\n        trailingLineBreaks: 2,\n        uppercase: true\n      }\n    },\n    'header': {\n      format: 'block'\n    },\n    'hr': {\n      format: 'horizontalLine',\n      options: {\n        leadingLineBreaks: 2,\n        length: undefined,\n        trailingLineBreaks: 2\n      }\n    },\n    'img': {\n      format: 'image',\n      options: {\n        baseUrl: null\n      }\n    },\n    'main': {\n      format: 'block'\n    },\n    'nav': {\n      format: 'block'\n    },\n    'ol': {\n      format: 'orderedList',\n      options: {\n        leadingLineBreaks: 2,\n        trailingLineBreaks: 2\n      }\n    },\n    'p': {\n      format: 'paragraph',\n      options: {\n        leadingLineBreaks: 2,\n        trailingLineBreaks: 2\n      }\n    },\n    'pre': {\n      format: 'pre',\n      options: {\n        leadingLineBreaks: 2,\n        trailingLineBreaks: 2\n      }\n    },\n    'section': {\n      format: 'block'\n    },\n    'table': {\n      format: 'table',\n      options: {\n        colSpacing: 3,\n        leadingLineBreaks: 2,\n        maxColumnWidth: 60,\n        rowSpacing: 0,\n        trailingLineBreaks: 2,\n        uppercaseHeaderCells: true\n      }\n    },\n    'ul': {\n      format: 'unorderedList',\n      options: {\n        itemPrefix: ' * ',\n        leadingLineBreaks: 2,\n        trailingLineBreaks: 2\n      }\n    },\n    'wbr': {\n      format: 'wbr'\n    }\n  },\n  whitespaceCharacters: \" \\t\\r\\n\\f\\u200B\",\n  wordwrap: 80\n};\n/**\n * Convert given HTML content to plain text string.\n *\n * @param   { string }  html           HTML content to convert.\n * @param   { Options } [options = {}] HtmlToText options.\n * @returns { string }                 Plain text string.\n * @static\n *\n * @example\n * const { htmlToText } = require('html-to-text');\n * const text = htmlToText('<h1>Hello World</h1>', {\n *   wordwrap: 130\n * });\n * console.log(text); // HELLO WORLD\n */\n\nfunction htmlToText(html) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  options = merge(DEFAULT_OPTIONS, options, {\n    arrayMerge: function arrayMerge(destinationArray, sourceArray, mergeOptions) {\n      return sourceArray;\n    }\n  });\n  options.formatters = Object.assign({}, defaultFormatters, options.formatters);\n  handleDeprecatedOptions(options);\n  var maxInputLength = options.limits.maxInputLength;\n\n  if (maxInputLength && html && html.length > maxInputLength) {\n    console.warn(\"Input length \".concat(html.length, \" is above allowed limit of \").concat(maxInputLength, \". Truncating without ellipsis.\"));\n    html = html.substring(0, maxInputLength);\n  }\n\n  var handler = new htmlparser.DefaultHandler();\n  new htmlparser.Parser(handler, {\n    decodeEntities: false\n  }).parseComplete(html);\n  var limitedWalk = limitedDepthRecursive(options.limits.maxDepth, recursiveWalk, function (dom, builder) {\n    builder.addInline(options.limits.ellipsis || '');\n  });\n  var baseElements = Array.isArray(options.baseElement) ? options.baseElement : [options.baseElement];\n  var bases = baseElements.map(function (be) {\n    return findBase(handler.dom, options, be);\n  }).filter(function (b) {\n    return b;\n  }).reduce(function (acc, b) {\n    return acc.concat(b);\n  }, []);\n  var builder = new BlockTextBuilder(options);\n  limitedWalk(bases, builder);\n  return builder.toString();\n}\n/**\n * Map previously existing and now deprecated options to the new options layout.\n * This is a subject for cleanup in major releases.\n *\n * @param { Options } options HtmlToText options.\n */\n\n\nfunction handleDeprecatedOptions(options) {\n  var tagDefinitions = Object.values(options.tags);\n\n  function copyFormatterOption(source, format, target) {\n    if (options[source] === undefined) {\n      return;\n    }\n\n    for (var _i = 0, _tagDefinitions = tagDefinitions; _i < _tagDefinitions.length; _i++) {\n      var tagDefinition = _tagDefinitions[_i];\n\n      if (tagDefinition.format === format) {\n        set(tagDefinition, ['options', target], options[source]);\n      }\n    }\n  }\n\n  copyFormatterOption('hideLinkHrefIfSameAsText', 'anchor', 'hideLinkHrefIfSameAsText');\n  copyFormatterOption('ignoreHref', 'anchor', 'ignoreHref');\n  copyFormatterOption('linkHrefBaseUrl', 'anchor', 'baseUrl');\n  copyFormatterOption('noAnchorUrl', 'anchor', 'noAnchorUrl');\n  copyFormatterOption('noLinkBrackets', 'anchor', 'noLinkBrackets');\n  copyFormatterOption('linkHrefBaseUrl', 'image', 'baseUrl');\n  copyFormatterOption('unorderedListItemPrefix', 'unorderedList', 'itemPrefix');\n  copyFormatterOption('uppercaseHeadings', 'heading', 'uppercase');\n  copyFormatterOption('uppercaseHeadings', 'table', 'uppercaseHeadings');\n  copyFormatterOption('uppercaseHeadings', 'dataTable', 'uppercaseHeadings');\n\n  if (options['ignoreImage']) {\n    var _iterator = _createForOfIteratorHelper(tagDefinitions),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var tagDefinition = _step.value;\n\n        if (tagDefinition.format === 'image') {\n          tagDefinition.format = 'skip';\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  if (options['singleNewLineParagraphs']) {\n    var _iterator2 = _createForOfIteratorHelper(tagDefinitions),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _tagDefinition = _step2.value;\n\n        if (_tagDefinition.format === 'paragraph' || _tagDefinition.format === 'pre') {\n          set(_tagDefinition, ['options', 'leadingLineBreaks'], 1);\n          set(_tagDefinition, ['options', 'trailingLineBreaks'], 1);\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n}\n\nfunction findBase(dom, options, baseElement) {\n  var result = null;\n  var splitTag = splitSelector(baseElement);\n\n  function recursiveWalk(walk,\n  /** @type { DomNode[] } */\n  dom) {\n    if (result) {\n      return;\n    }\n\n    dom = dom.slice(0, options.limits.maxChildNodes);\n\n    var _iterator3 = _createForOfIteratorHelper(dom),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var elem = _step3.value;\n\n        if (result) {\n          return;\n        }\n\n        if (elem.name === splitTag.element) {\n          var _ret = function () {\n            var documentClasses = elem.attribs && elem.attribs.class ? elem.attribs.class.split(' ') : [];\n            var documentIds = elem.attribs && elem.attribs.id ? elem.attribs.id.split(' ') : [];\n\n            if (splitTag.classes.every(function (val) {\n              return documentClasses.indexOf(val) >= 0;\n            }) && splitTag.ids.every(function (val) {\n              return documentIds.indexOf(val) >= 0;\n            })) {\n              result = [elem];\n              return {\n                v: void 0\n              };\n            }\n          }();\n\n          if (typeof _ret === \"object\") return _ret.v;\n        }\n\n        if (elem.children) {\n          walk(elem.children);\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n\n  var limitedWalk = limitedDepthRecursive(options.limits.maxDepth, recursiveWalk);\n  limitedWalk(dom);\n  return options.returnDomByDefault ? result || dom : result;\n}\n/**\n * Function to walk through DOM nodes and accumulate their string representations.\n *\n * @param   { RecursiveCallback } walk    Recursive callback.\n * @param   { DomNode[] }         [dom]   Nodes array to process.\n * @param   { BlockTextBuilder }  builder Passed around to accumulate output text.\n * @private\n */\n\n\nfunction recursiveWalk(walk, dom, builder) {\n  if (!dom) {\n    return;\n  }\n\n  var options = builder.options;\n  var tooManyChildNodes = dom.length > options.limits.maxChildNodes;\n\n  if (tooManyChildNodes) {\n    dom = dom.slice(0, options.limits.maxChildNodes);\n    dom.push({\n      data: options.limits.ellipsis,\n      type: 'text'\n    });\n  }\n\n  var _iterator4 = _createForOfIteratorHelper(dom),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var elem = _step4.value;\n\n      switch (elem.type) {\n        case 'text':\n          {\n            builder.addInline(he.decode(elem.data, options.decodeOptions));\n            break;\n          }\n\n        case 'tag':\n          {\n            var tags = options.tags;\n            var tagDefinition = tags[elem.name] || tags[''];\n            var format = options.formatters[tagDefinition.format];\n            format(elem, walk, builder, tagDefinition.options || {});\n            break;\n          }\n\n        default:\n          /* do nothing */\n          break;\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  return;\n}\n/**\n * @deprecated Import/require `{ htmlToText }` function instead!\n * @see htmlToText\n *\n * @param   { string }  html           HTML content to convert.\n * @param   { Options } [options = {}] HtmlToText options.\n * @returns { string }                 Plain text string.\n * @static\n */\n\n\nvar fromString = function fromString(html) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return htmlToText(html, options);\n};\n\nmodule.exports = {\n  htmlToText: htmlToText,\n  fromString: fromString\n};","map":{"version":3,"names":["merge","require","he","htmlparser","BlockTextBuilder","defaultFormatters","limitedDepthRecursive","set","splitSelector","DEFAULT_OPTIONS","baseElement","decodeOptions","isAttributeValue","strict","formatters","limits","ellipsis","maxChildNodes","undefined","maxDepth","maxInputLength","longWordSplit","forceWrapOnLimit","wrapCharacters","preserveNewlines","returnDomByDefault","tables","tags","format","options","baseUrl","hideLinkHrefIfSameAsText","ignoreHref","noAnchorUrl","noLinkBrackets","leadingLineBreaks","trailingLineBreaks","trimEmptyLines","uppercase","length","colSpacing","maxColumnWidth","rowSpacing","uppercaseHeaderCells","itemPrefix","whitespaceCharacters","wordwrap","htmlToText","html","arrayMerge","destinationArray","sourceArray","mergeOptions","Object","assign","handleDeprecatedOptions","console","warn","substring","handler","DefaultHandler","Parser","decodeEntities","parseComplete","limitedWalk","recursiveWalk","dom","builder","addInline","baseElements","Array","isArray","bases","map","be","findBase","filter","b","reduce","acc","concat","toString","tagDefinitions","values","copyFormatterOption","source","target","tagDefinition","result","splitTag","walk","slice","elem","name","element","documentClasses","attribs","class","split","documentIds","id","classes","every","val","indexOf","ids","children","tooManyChildNodes","push","data","type","decode","fromString","module","exports"],"sources":["/Users/apple/Documents/Testnet/sandbox_chat_application/node_modules/html-to-text/lib/html-to-text.js"],"sourcesContent":["const merge = require('deepmerge');\nconst he = require('he');\nconst htmlparser = require('htmlparser2');\n\nconst { BlockTextBuilder } = require('./block-text-builder');\nconst defaultFormatters = require('./formatter');\nconst { limitedDepthRecursive, set, splitSelector } = require('./helper');\n\n// eslint-disable-next-line import/no-unassigned-import\nrequire('./typedefs');\n\n\n/**\n * Default options.\n *\n * @constant\n * @type { Options }\n * @default\n * @private\n */\nconst DEFAULT_OPTIONS = {\n  baseElement: 'body',\n  decodeOptions: {\n    isAttributeValue: false,\n    strict: false\n  },\n  formatters: {},\n  limits: {\n    ellipsis: '...',\n    maxChildNodes: undefined,\n    maxDepth: undefined,\n    maxInputLength: (1 << 24) // 16_777_216\n  },\n  longWordSplit: {\n    forceWrapOnLimit: false,\n    wrapCharacters: []\n  },\n  preserveNewlines: false,\n  returnDomByDefault: true,\n  tables: [],\n  tags: {\n    '': { format: 'inline' }, // defaults for any other tag name\n    'a': {\n      format: 'anchor',\n      options: { baseUrl: null, hideLinkHrefIfSameAsText: false, ignoreHref: false, noAnchorUrl: true, noLinkBrackets: false }\n    },\n    'article': { format: 'block' },\n    'aside': { format: 'block' },\n    'blockquote': {\n      format: 'blockquote',\n      options: { leadingLineBreaks: 2, trailingLineBreaks: 2, trimEmptyLines: true }\n    },\n    'br': { format: 'lineBreak' },\n    'div': { format: 'block' },\n    'footer': { format: 'block' },\n    'form': { format: 'block' },\n    'h1': { format: 'heading', options: { leadingLineBreaks: 3, trailingLineBreaks: 2, uppercase: true } },\n    'h2': { format: 'heading', options: { leadingLineBreaks: 3, trailingLineBreaks: 2, uppercase: true } },\n    'h3': { format: 'heading', options: { leadingLineBreaks: 3, trailingLineBreaks: 2, uppercase: true } },\n    'h4': { format: 'heading', options: { leadingLineBreaks: 2, trailingLineBreaks: 2, uppercase: true } },\n    'h5': { format: 'heading', options: { leadingLineBreaks: 2, trailingLineBreaks: 2, uppercase: true } },\n    'h6': { format: 'heading', options: { leadingLineBreaks: 2, trailingLineBreaks: 2, uppercase: true } },\n    'header': { format: 'block' },\n    'hr': { format: 'horizontalLine', options: { leadingLineBreaks: 2, length: undefined, trailingLineBreaks: 2 } },\n    'img': { format: 'image', options: { baseUrl: null } },\n    'main': { format: 'block' },\n    'nav': { format: 'block' },\n    'ol': { format: 'orderedList', options: { leadingLineBreaks: 2, trailingLineBreaks: 2 } },\n    'p': { format: 'paragraph', options: { leadingLineBreaks: 2, trailingLineBreaks: 2 } },\n    'pre': { format: 'pre', options: { leadingLineBreaks: 2, trailingLineBreaks: 2 } },\n    'section': { format: 'block' },\n    'table': {\n      format: 'table',\n      options: {\n        colSpacing: 3,\n        leadingLineBreaks: 2,\n        maxColumnWidth: 60,\n        rowSpacing: 0,\n        trailingLineBreaks: 2,\n        uppercaseHeaderCells: true\n      }\n    },\n    'ul': {\n      format: 'unorderedList',\n      options: { itemPrefix: ' * ', leadingLineBreaks: 2, trailingLineBreaks: 2 }\n    },\n    'wbr': { format: 'wbr' }\n  },\n  whitespaceCharacters: ' \\t\\r\\n\\f\\u200b',\n  wordwrap: 80\n};\n\n/**\n * Convert given HTML content to plain text string.\n *\n * @param   { string }  html           HTML content to convert.\n * @param   { Options } [options = {}] HtmlToText options.\n * @returns { string }                 Plain text string.\n * @static\n *\n * @example\n * const { htmlToText } = require('html-to-text');\n * const text = htmlToText('<h1>Hello World</h1>', {\n *   wordwrap: 130\n * });\n * console.log(text); // HELLO WORLD\n */\nfunction htmlToText (html, options = {}) {\n  options = merge(\n    DEFAULT_OPTIONS,\n    options,\n    { arrayMerge: (destinationArray, sourceArray, mergeOptions) => sourceArray }\n  );\n  options.formatters = Object.assign({}, defaultFormatters, options.formatters);\n\n  handleDeprecatedOptions(options);\n\n  const maxInputLength = options.limits.maxInputLength;\n  if (maxInputLength && html && html.length > maxInputLength) {\n    console.warn(\n      `Input length ${html.length} is above allowed limit of ${maxInputLength}. Truncating without ellipsis.`\n    );\n    html = html.substring(0, maxInputLength);\n  }\n\n  const handler = new htmlparser.DefaultHandler();\n  new htmlparser.Parser(handler, { decodeEntities: false }).parseComplete(html);\n\n  const limitedWalk = limitedDepthRecursive(\n    options.limits.maxDepth,\n    recursiveWalk,\n    function (dom, builder) {\n      builder.addInline(options.limits.ellipsis || '');\n    }\n  );\n\n  const baseElements = Array.isArray(options.baseElement)\n    ? options.baseElement\n    : [options.baseElement];\n  const bases = baseElements\n    .map(be => findBase(handler.dom, options, be))\n    .filter(b => b)\n    .reduce((acc, b) => acc.concat(b), []);\n\n  const builder = new BlockTextBuilder(options);\n  limitedWalk(bases, builder);\n  return builder.toString();\n}\n\n/**\n * Map previously existing and now deprecated options to the new options layout.\n * This is a subject for cleanup in major releases.\n *\n * @param { Options } options HtmlToText options.\n */\nfunction handleDeprecatedOptions (options) {\n  const tagDefinitions = Object.values(options.tags);\n\n  function copyFormatterOption (source, format, target) {\n    if (options[source] === undefined) { return; }\n    for (const tagDefinition of tagDefinitions) {\n      if (tagDefinition.format === format) {\n        set(tagDefinition, ['options', target], options[source]);\n      }\n    }\n  }\n\n  copyFormatterOption('hideLinkHrefIfSameAsText', 'anchor', 'hideLinkHrefIfSameAsText');\n  copyFormatterOption('ignoreHref', 'anchor', 'ignoreHref');\n  copyFormatterOption('linkHrefBaseUrl', 'anchor', 'baseUrl');\n  copyFormatterOption('noAnchorUrl', 'anchor', 'noAnchorUrl');\n  copyFormatterOption('noLinkBrackets', 'anchor', 'noLinkBrackets');\n\n  copyFormatterOption('linkHrefBaseUrl', 'image', 'baseUrl');\n\n  copyFormatterOption('unorderedListItemPrefix', 'unorderedList', 'itemPrefix');\n\n  copyFormatterOption('uppercaseHeadings', 'heading', 'uppercase');\n  copyFormatterOption('uppercaseHeadings', 'table', 'uppercaseHeadings');\n  copyFormatterOption('uppercaseHeadings', 'dataTable', 'uppercaseHeadings');\n\n  if (options['ignoreImage']) {\n    for (const tagDefinition of tagDefinitions) {\n      if (tagDefinition.format === 'image') {\n        tagDefinition.format = 'skip';\n      }\n    }\n  }\n\n  if (options['singleNewLineParagraphs']) {\n    for (const tagDefinition of tagDefinitions) {\n      if (tagDefinition.format === 'paragraph' || tagDefinition.format === 'pre') {\n        set(tagDefinition, ['options', 'leadingLineBreaks'], 1);\n        set(tagDefinition, ['options', 'trailingLineBreaks'], 1);\n      }\n    }\n  }\n}\n\nfunction findBase (dom, options, baseElement) {\n  let result = null;\n\n  const splitTag = splitSelector(baseElement);\n\n  function recursiveWalk (walk, /** @type { DomNode[] } */ dom) {\n    if (result) { return; }\n    dom = dom.slice(0, options.limits.maxChildNodes);\n    for (const elem of dom) {\n      if (result) { return; }\n      if (elem.name === splitTag.element) {\n        const documentClasses = elem.attribs && elem.attribs.class ? elem.attribs.class.split(' ') : [];\n        const documentIds = elem.attribs && elem.attribs.id ? elem.attribs.id.split(' ') : [];\n\n        if (\n          splitTag.classes.every(function (val) { return documentClasses.indexOf(val) >= 0; }) &&\n          splitTag.ids.every(function (val) { return documentIds.indexOf(val) >= 0; })\n        ) {\n          result = [elem];\n          return;\n        }\n      }\n      if (elem.children) { walk(elem.children); }\n    }\n  }\n\n  const limitedWalk = limitedDepthRecursive(\n    options.limits.maxDepth,\n    recursiveWalk\n  );\n\n  limitedWalk(dom);\n  return options.returnDomByDefault ? result || dom : result;\n}\n\n/**\n * Function to walk through DOM nodes and accumulate their string representations.\n *\n * @param   { RecursiveCallback } walk    Recursive callback.\n * @param   { DomNode[] }         [dom]   Nodes array to process.\n * @param   { BlockTextBuilder }  builder Passed around to accumulate output text.\n * @private\n */\nfunction recursiveWalk (walk, dom, builder) {\n  if (!dom) { return; }\n\n  const options = builder.options;\n\n  const tooManyChildNodes = dom.length > options.limits.maxChildNodes;\n  if (tooManyChildNodes) {\n    dom = dom.slice(0, options.limits.maxChildNodes);\n    dom.push({\n      data: options.limits.ellipsis,\n      type: 'text'\n    });\n  }\n\n  for (const elem of dom) {\n    switch (elem.type) {\n      case 'text': {\n        builder.addInline(he.decode(elem.data, options.decodeOptions));\n        break;\n      }\n      case 'tag': {\n        const tags = options.tags;\n        const tagDefinition = tags[elem.name] || tags[''];\n        const format = options.formatters[tagDefinition.format];\n        format(elem, walk, builder, tagDefinition.options || {});\n        break;\n      }\n      default:\n        /* do nothing */\n        break;\n    }\n  }\n\n  return;\n}\n\n/**\n * @deprecated Import/require `{ htmlToText }` function instead!\n * @see htmlToText\n *\n * @param   { string }  html           HTML content to convert.\n * @param   { Options } [options = {}] HtmlToText options.\n * @returns { string }                 Plain text string.\n * @static\n */\nconst fromString = (html, options = {}) => htmlToText(html, options);\n\nmodule.exports = {\n  htmlToText: htmlToText,\n  fromString: fromString\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}